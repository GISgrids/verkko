#############################################################################
 #
 #  This file is part of Verkko, a software program that assembles
 #  whole-genome sequencing reads into telomere-to-telomere
 #  haplotype-resolved chromosomes.
 #
 #  Except as indicated otherwise, this is a 'United States Government
 #  Work', and is released in the public domain.
 #
 #  File 'README.licenses' in the root directory of this distribution
 #  contains full conditions and disclaimers.
 #
 ##

#
#  Rule combineConsensus combines the outputs of consensus into a single
#  file, and rename the sequences back to their original names.
#


#  These two functions return different paths to the inputs.  The first
#  returns a path relative to the root directory, used by Snakemake itself to
#  figure out the DAG.  The second returns a path relative to the 7-consensus
#  directory, which we use when running the command.
#
def combineConsensusI(wildcards):
    return expand("7-consensus/packages/part{nnnn}.fasta", nnnn = glob_wildcards("7-consensus/packages/part{xxxx}.cnspack").xxxx)
def combineConsensusP(wildcards):
    return expand(            "packages/part{nnnn}.fasta", nnnn = glob_wildcards("7-consensus/packages/part{xxxx}.cnspack").xxxx)

rule combineConsensus:
    input:
        consensus = combineConsensusI,
        tigmap    = {rules.buildPackages.output.tigmap},
        scfmap    = {rules.layoutContigs.output.scfmap},
        finished  = {rules.buildPackages.output.finished},
    output:
        fasta     = {rules.verkko.input.consensus}
    log:
        err       = '7-consensus/combineConsensus.err'
    params:
        consensus = combineConsensusP,
        keepinter = config['keep_intermediate'],
        jobid     = 1
    threads:
        1
    resources:
        n_cpus = 1,
        mem_gb = lambda wildcards, input, attempt: getAlignMemoryRequest(attempt, 1.25, input.consensus),
        time_h = 4
    shell:
        '''
cd 7-consensus

cat > ./combineConsensus.sh <<EOF
#!/bin/sh
set -e

{PYTHON} {VERKKO}/scripts/process_reads.py combine ../{output.fasta} \\\\
  ../{input.tigmap} \\\\
  ../{input.scfmap} \\\\
  {params.consensus}

if [ {params.keepinter} = False ] ; then
  rm -rf packages
fi
EOF

chmod +x ./combineConsensus.sh

./combineConsensus.sh > ../{log.err} 2>&1
        '''
